diff --git a/index.d.ts b/index.d.ts
index 98ddb88ac1f937e06a5d562b7bf2ab48a64a34d6..850f0f7971d6407fd511d93dc5805b997198017e 100644
--- a/index.d.ts
+++ b/index.d.ts
@@ -13,6 +13,15 @@
 import * as t from '@babel/types';
 export import Node = t.Node;
 
+declare global {
+    namespace Synchrony {
+        interface NodePathData {
+            [key: string]: any
+        }
+    }
+}
+type NodePathDataKey = keyof Synchrony.NodePathData
+type NodePathDataVal<TKey extends NodePathDataKey> = Synchrony.NodePathData[TKey]
 declare const traverse: {
     <S>(
         parent: Node | Node[] | null | undefined,
@@ -260,9 +269,9 @@ export class NodePath<T = Node> {
 
     getScope(scope: Scope): Scope;
 
-    setData(key: string, val: any): any;
+    setData<TKey extends NodePathDataKey, TVal extends NodePathDataVal<TKey> = NodePathDataVal<TKey>>(key: TKey, val: TVal): TVal;
 
-    getData(key: string, def?: any): any;
+    getData<TKey extends NodePathDataKey, TVal extends NodePathDataVal<TKey> = NodePathDataVal<TKey>>(key: TKey, def?: TVal): TVal | undefined;
 
     hasNode(): this is NodePath<NonNullable<this['node']>>;
 
@@ -883,282 +892,288 @@ export class NodePath<T = Node> {
     //#endregion
 
     //#region ------------------------- assertXXX -------------------------
-    assertAnyTypeAnnotation(props?: object | null): void;
-    assertArrayExpression(props?: object | null): void;
-    assertArrayPattern(props?: object | null): void;
-    assertArrayTypeAnnotation(props?: object | null): void;
-    assertArrowFunctionExpression(props?: object | null): void;
-    assertAssignmentExpression(props?: object | null): void;
-    assertAssignmentPattern(props?: object | null): void;
-    assertAwaitExpression(props?: object | null): void;
-    assertBigIntLiteral(props?: object | null): void;
-    assertBinary(props?: object | null): void;
-    assertBinaryExpression(props?: object | null): void;
-    assertBindExpression(props?: object | null): void;
-    assertBlock(props?: object | null): void;
-    assertBlockParent(props?: object | null): void;
-    assertBlockStatement(props?: object | null): void;
-    assertBooleanLiteral(props?: object | null): void;
-    assertBooleanLiteralTypeAnnotation(props?: object | null): void;
-    assertBooleanTypeAnnotation(props?: object | null): void;
-    assertBreakStatement(props?: object | null): void;
-    assertCallExpression(props?: object | null): void;
-    assertCatchClause(props?: object | null): void;
-    assertClass(props?: object | null): void;
-    assertClassBody(props?: object | null): void;
-    assertClassDeclaration(props?: object | null): void;
-    assertClassExpression(props?: object | null): void;
-    assertClassImplements(props?: object | null): void;
-    assertClassMethod(props?: object | null): void;
-    assertClassPrivateMethod(props?: object | null): void;
-    assertClassPrivateProperty(props?: object | null): void;
-    assertClassProperty(props?: object | null): void;
-    assertCompletionStatement(props?: object | null): void;
-    assertConditional(props?: object | null): void;
-    assertConditionalExpression(props?: object | null): void;
-    assertContinueStatement(props?: object | null): void;
-    assertDebuggerStatement(props?: object | null): void;
-    assertDeclaration(props?: object | null): void;
-    assertDeclareClass(props?: object | null): void;
-    assertDeclareExportAllDeclaration(props?: object | null): void;
-    assertDeclareExportDeclaration(props?: object | null): void;
-    assertDeclareFunction(props?: object | null): void;
-    assertDeclareInterface(props?: object | null): void;
-    assertDeclareModule(props?: object | null): void;
-    assertDeclareModuleExports(props?: object | null): void;
-    assertDeclareOpaqueType(props?: object | null): void;
-    assertDeclareTypeAlias(props?: object | null): void;
-    assertDeclareVariable(props?: object | null): void;
-    assertDeclaredPredicate(props?: object | null): void;
-    assertDecorator(props?: object | null): void;
-    assertDirective(props?: object | null): void;
-    assertDirectiveLiteral(props?: object | null): void;
-    assertDoExpression(props?: object | null): void;
-    assertDoWhileStatement(props?: object | null): void;
-    assertEmptyStatement(props?: object | null): void;
-    assertEmptyTypeAnnotation(props?: object | null): void;
-    assertExistsTypeAnnotation(props?: object | null): void;
-    assertExportAllDeclaration(props?: object | null): void;
-    assertExportDeclaration(props?: object | null): void;
-    assertExportDefaultDeclaration(props?: object | null): void;
-    assertExportDefaultSpecifier(props?: object | null): void;
-    assertExportNamedDeclaration(props?: object | null): void;
-    assertExportNamespaceSpecifier(props?: object | null): void;
-    assertExportSpecifier(props?: object | null): void;
-    assertExpression(props?: object | null): void;
-    assertExpressionStatement(props?: object | null): void;
-    assertExpressionWrapper(props?: object | null): void;
-    assertFile(props?: object | null): void;
-    assertFlow(props?: object | null): void;
-    assertFlowBaseAnnotation(props?: object | null): void;
-    assertFlowDeclaration(props?: object | null): void;
-    assertFlowPredicate(props?: object | null): void;
-    assertFlowType(props?: object | null): void;
-    assertFor(props?: object | null): void;
-    assertForInStatement(props?: object | null): void;
-    assertForOfStatement(props?: object | null): void;
-    assertForStatement(props?: object | null): void;
-    assertForXStatement(props?: object | null): void;
-    assertFunction(props?: object | null): void;
-    assertFunctionDeclaration(props?: object | null): void;
-    assertFunctionExpression(props?: object | null): void;
-    assertFunctionParent(props?: object | null): void;
-    assertFunctionTypeAnnotation(props?: object | null): void;
-    assertFunctionTypeParam(props?: object | null): void;
-    assertGenericTypeAnnotation(props?: object | null): void;
-    assertIdentifier(props?: object | null): void;
-    assertIfStatement(props?: object | null): void;
-    assertImmutable(props?: object | null): void;
-    assertImport(props?: object | null): void;
-    assertImportDeclaration(props?: object | null): void;
-    assertImportDefaultSpecifier(props?: object | null): void;
-    assertImportNamespaceSpecifier(props?: object | null): void;
-    assertImportSpecifier(props?: object | null): void;
-    assertInferredPredicate(props?: object | null): void;
-    assertInterfaceDeclaration(props?: object | null): void;
-    assertInterfaceExtends(props?: object | null): void;
-    assertInterfaceTypeAnnotation(props?: object | null): void;
-    assertInterpreterDirective(props?: object | null): void;
-    assertIntersectionTypeAnnotation(props?: object | null): void;
-    assertJSX(props?: object | null): void;
-    assertJSXAttribute(props?: object | null): void;
-    assertJSXClosingElement(props?: object | null): void;
-    assertJSXClosingFragment(props?: object | null): void;
-    assertJSXElement(props?: object | null): void;
-    assertJSXEmptyExpression(props?: object | null): void;
-    assertJSXExpressionContainer(props?: object | null): void;
-    assertJSXFragment(props?: object | null): void;
-    assertJSXIdentifier(props?: object | null): void;
-    assertJSXMemberExpression(props?: object | null): void;
-    assertJSXNamespacedName(props?: object | null): void;
-    assertJSXOpeningElement(props?: object | null): void;
-    assertJSXOpeningFragment(props?: object | null): void;
-    assertJSXSpreadAttribute(props?: object | null): void;
-    assertJSXSpreadChild(props?: object | null): void;
-    assertJSXText(props?: object | null): void;
-    assertLVal(props?: object | null): void;
-    assertLabeledStatement(props?: object | null): void;
-    assertLiteral(props?: object | null): void;
-    assertLogicalExpression(props?: object | null): void;
-    assertLoop(props?: object | null): void;
-    assertMemberExpression(props?: object | null): void;
-    assertMetaProperty(props?: object | null): void;
-    assertMethod(props?: object | null): void;
-    assertMixedTypeAnnotation(props?: object | null): void;
-    assertModuleDeclaration(props?: object | null): void;
-    assertModuleSpecifier(props?: object | null): void;
-    assertNewExpression(props?: object | null): void;
-    assertNoop(props?: object | null): void;
-    assertNullLiteral(props?: object | null): void;
-    assertNullLiteralTypeAnnotation(props?: object | null): void;
-    assertNullableTypeAnnotation(props?: object | null): void;
+
+    // See https://github.com/babel/babel/blob/91e70d9aa0c189bb2d466db6ab86cb1c60d6d458/packages/babel-traverse/src/path/generated/asserts.d.ts
+    // Find   :  /(assert(\w+)\([^)]+\):) void;/i
+    // Replace:  $1 asserts this is NodePath<t.$2>;
+
+    assertAnyTypeAnnotation(props?: object | null): asserts this is NodePath<t.AnyTypeAnnotation>;
+    assertArrayExpression(props?: object | null): asserts this is NodePath<t.ArrayExpression>;
+    assertArrayPattern(props?: object | null): asserts this is NodePath<t.ArrayPattern>;
+    assertArrayTypeAnnotation(props?: object | null): asserts this is NodePath<t.ArrayTypeAnnotation>;
+    assertArrowFunctionExpression(props?: object | null): asserts this is NodePath<t.ArrowFunctionExpression>;
+    assertAssignmentExpression(props?: object | null): asserts this is NodePath<t.AssignmentExpression>;
+    assertAssignmentPattern(props?: object | null): asserts this is NodePath<t.AssignmentPattern>;
+    assertAwaitExpression(props?: object | null): asserts this is NodePath<t.AwaitExpression>;
+    assertBigIntLiteral(props?: object | null): asserts this is NodePath<t.BigIntLiteral>;
+    assertBinary(props?: object | null): asserts this is NodePath<t.Binary>;
+    assertBinaryExpression(props?: object | null): asserts this is NodePath<t.BinaryExpression>;
+    assertBindExpression(props?: object | null): asserts this is NodePath<t.BindExpression>;
+    assertBlock(props?: object | null): asserts this is NodePath<t.Block>;
+    assertBlockParent(props?: object | null): asserts this is NodePath<t.BlockParent>;
+    assertBlockStatement(props?: object | null): asserts this is NodePath<t.BlockStatement>;
+    assertBooleanLiteral(props?: object | null): asserts this is NodePath<t.BooleanLiteral>;
+    assertBooleanLiteralTypeAnnotation(props?: object | null): asserts this is NodePath<t.BooleanLiteralTypeAnnotation>;
+    assertBooleanTypeAnnotation(props?: object | null): asserts this is NodePath<t.BooleanTypeAnnotation>;
+    assertBreakStatement(props?: object | null): asserts this is NodePath<t.BreakStatement>;
+    assertCallExpression(props?: object | null): asserts this is NodePath<t.CallExpression>;
+    assertCatchClause(props?: object | null): asserts this is NodePath<t.CatchClause>;
+    assertClass(props?: object | null): asserts this is NodePath<t.Class>;
+    assertClassBody(props?: object | null): asserts this is NodePath<t.ClassBody>;
+    assertClassDeclaration(props?: object | null): asserts this is NodePath<t.ClassDeclaration>;
+    assertClassExpression(props?: object | null): asserts this is NodePath<t.ClassExpression>;
+    assertClassImplements(props?: object | null): asserts this is NodePath<t.ClassImplements>;
+    assertClassMethod(props?: object | null): asserts this is NodePath<t.ClassMethod>;
+    assertClassPrivateMethod(props?: object | null): asserts this is NodePath<t.ClassPrivateMethod>;
+    assertClassPrivateProperty(props?: object | null): asserts this is NodePath<t.ClassPrivateProperty>;
+    assertClassProperty(props?: object | null): asserts this is NodePath<t.ClassProperty>;
+    assertCompletionStatement(props?: object | null): asserts this is NodePath<t.CompletionStatement>;
+    assertConditional(props?: object | null): asserts this is NodePath<t.Conditional>;
+    assertConditionalExpression(props?: object | null): asserts this is NodePath<t.ConditionalExpression>;
+    assertContinueStatement(props?: object | null): asserts this is NodePath<t.ContinueStatement>;
+    assertDebuggerStatement(props?: object | null): asserts this is NodePath<t.DebuggerStatement>;
+    assertDeclaration(props?: object | null): asserts this is NodePath<t.Declaration>;
+    assertDeclareClass(props?: object | null): asserts this is NodePath<t.DeclareClass>;
+    assertDeclareExportAllDeclaration(props?: object | null): asserts this is NodePath<t.DeclareExportAllDeclaration>;
+    assertDeclareExportDeclaration(props?: object | null): asserts this is NodePath<t.DeclareExportDeclaration>;
+    assertDeclareFunction(props?: object | null): asserts this is NodePath<t.DeclareFunction>;
+    assertDeclareInterface(props?: object | null): asserts this is NodePath<t.DeclareInterface>;
+    assertDeclareModule(props?: object | null): asserts this is NodePath<t.DeclareModule>;
+    assertDeclareModuleExports(props?: object | null): asserts this is NodePath<t.DeclareModuleExports>;
+    assertDeclareOpaqueType(props?: object | null): asserts this is NodePath<t.DeclareOpaqueType>;
+    assertDeclareTypeAlias(props?: object | null): asserts this is NodePath<t.DeclareTypeAlias>;
+    assertDeclareVariable(props?: object | null): asserts this is NodePath<t.DeclareVariable>;
+    assertDeclaredPredicate(props?: object | null): asserts this is NodePath<t.DeclaredPredicate>;
+    assertDecorator(props?: object | null): asserts this is NodePath<t.Decorator>;
+    assertDirective(props?: object | null): asserts this is NodePath<t.Directive>;
+    assertDirectiveLiteral(props?: object | null): asserts this is NodePath<t.DirectiveLiteral>;
+    assertDoExpression(props?: object | null): asserts this is NodePath<t.DoExpression>;
+    assertDoWhileStatement(props?: object | null): asserts this is NodePath<t.DoWhileStatement>;
+    assertEmptyStatement(props?: object | null): asserts this is NodePath<t.EmptyStatement>;
+    assertEmptyTypeAnnotation(props?: object | null): asserts this is NodePath<t.EmptyTypeAnnotation>;
+    assertExistsTypeAnnotation(props?: object | null): asserts this is NodePath<t.ExistsTypeAnnotation>;
+    assertExportAllDeclaration(props?: object | null): asserts this is NodePath<t.ExportAllDeclaration>;
+    assertExportDeclaration(props?: object | null): asserts this is NodePath<t.ExportDeclaration>;
+    assertExportDefaultDeclaration(props?: object | null): asserts this is NodePath<t.ExportDefaultDeclaration>;
+    assertExportDefaultSpecifier(props?: object | null): asserts this is NodePath<t.ExportDefaultSpecifier>;
+    assertExportNamedDeclaration(props?: object | null): asserts this is NodePath<t.ExportNamedDeclaration>;
+    assertExportNamespaceSpecifier(props?: object | null): asserts this is NodePath<t.ExportNamespaceSpecifier>;
+    assertExportSpecifier(props?: object | null): asserts this is NodePath<t.ExportSpecifier>;
+    assertExpression(props?: object | null): asserts this is NodePath<t.Expression>;
+    assertExpressionStatement(props?: object | null): asserts this is NodePath<t.ExpressionStatement>;
+    assertExpressionWrapper(props?: object | null): asserts this is NodePath<t.ExpressionWrapper>;
+    assertFile(props?: object | null): asserts this is NodePath<t.File>;
+    assertFlow(props?: object | null): asserts this is NodePath<t.Flow>;
+    assertFlowBaseAnnotation(props?: object | null): asserts this is NodePath<t.FlowBaseAnnotation>;
+    assertFlowDeclaration(props?: object | null): asserts this is NodePath<t.FlowDeclaration>;
+    assertFlowPredicate(props?: object | null): asserts this is NodePath<t.FlowPredicate>;
+    assertFlowType(props?: object | null): asserts this is NodePath<t.FlowType>;
+    assertFor(props?: object | null): asserts this is NodePath<t.For>;
+    assertForInStatement(props?: object | null): asserts this is NodePath<t.ForInStatement>;
+    assertForOfStatement(props?: object | null): asserts this is NodePath<t.ForOfStatement>;
+    assertForStatement(props?: object | null): asserts this is NodePath<t.ForStatement>;
+    assertForXStatement(props?: object | null): asserts this is NodePath<t.ForXStatement>;
+    assertFunction(props?: object | null): asserts this is NodePath<t.Function>;
+    assertFunctionDeclaration(props?: object | null): asserts this is NodePath<t.FunctionDeclaration>;
+    assertFunctionExpression(props?: object | null): asserts this is NodePath<t.FunctionExpression>;
+    assertFunctionParent(props?: object | null): asserts this is NodePath<t.FunctionParent>;
+    assertFunctionTypeAnnotation(props?: object | null): asserts this is NodePath<t.FunctionTypeAnnotation>;
+    assertFunctionTypeParam(props?: object | null): asserts this is NodePath<t.FunctionTypeParam>;
+    assertGenericTypeAnnotation(props?: object | null): asserts this is NodePath<t.GenericTypeAnnotation>;
+    assertIdentifier(props?: object | null): asserts this is NodePath<t.Identifier>;
+    assertIfStatement(props?: object | null): asserts this is NodePath<t.IfStatement>;
+    assertImmutable(props?: object | null): asserts this is NodePath<t.Immutable>;
+    assertImport(props?: object | null): asserts this is NodePath<t.Import>;
+    assertImportDeclaration(props?: object | null): asserts this is NodePath<t.ImportDeclaration>;
+    assertImportDefaultSpecifier(props?: object | null): asserts this is NodePath<t.ImportDefaultSpecifier>;
+    assertImportNamespaceSpecifier(props?: object | null): asserts this is NodePath<t.ImportNamespaceSpecifier>;
+    assertImportSpecifier(props?: object | null): asserts this is NodePath<t.ImportSpecifier>;
+    assertInferredPredicate(props?: object | null): asserts this is NodePath<t.InferredPredicate>;
+    assertInterfaceDeclaration(props?: object | null): asserts this is NodePath<t.InterfaceDeclaration>;
+    assertInterfaceExtends(props?: object | null): asserts this is NodePath<t.InterfaceExtends>;
+    assertInterfaceTypeAnnotation(props?: object | null): asserts this is NodePath<t.InterfaceTypeAnnotation>;
+    assertInterpreterDirective(props?: object | null): asserts this is NodePath<t.InterpreterDirective>;
+    assertIntersectionTypeAnnotation(props?: object | null): asserts this is NodePath<t.IntersectionTypeAnnotation>;
+    assertJSX(props?: object | null): asserts this is NodePath<t.JSX>;
+    assertJSXAttribute(props?: object | null): asserts this is NodePath<t.JSXAttribute>;
+    assertJSXClosingElement(props?: object | null): asserts this is NodePath<t.JSXClosingElement>;
+    assertJSXClosingFragment(props?: object | null): asserts this is NodePath<t.JSXClosingFragment>;
+    assertJSXElement(props?: object | null): asserts this is NodePath<t.JSXElement>;
+    assertJSXEmptyExpression(props?: object | null): asserts this is NodePath<t.JSXEmptyExpression>;
+    assertJSXExpressionContainer(props?: object | null): asserts this is NodePath<t.JSXExpressionContainer>;
+    assertJSXFragment(props?: object | null): asserts this is NodePath<t.JSXFragment>;
+    assertJSXIdentifier(props?: object | null): asserts this is NodePath<t.JSXIdentifier>;
+    assertJSXMemberExpression(props?: object | null): asserts this is NodePath<t.JSXMemberExpression>;
+    assertJSXNamespacedName(props?: object | null): asserts this is NodePath<t.JSXNamespacedName>;
+    assertJSXOpeningElement(props?: object | null): asserts this is NodePath<t.JSXOpeningElement>;
+    assertJSXOpeningFragment(props?: object | null): asserts this is NodePath<t.JSXOpeningFragment>;
+    assertJSXSpreadAttribute(props?: object | null): asserts this is NodePath<t.JSXSpreadAttribute>;
+    assertJSXSpreadChild(props?: object | null): asserts this is NodePath<t.JSXSpreadChild>;
+    assertJSXText(props?: object | null): asserts this is NodePath<t.JSXText>;
+    assertLVal(props?: object | null): asserts this is NodePath<t.LVal>;
+    assertLabeledStatement(props?: object | null): asserts this is NodePath<t.LabeledStatement>;
+    assertLiteral(props?: object | null): asserts this is NodePath<t.Literal>;
+    assertLogicalExpression(props?: object | null): asserts this is NodePath<t.LogicalExpression>;
+    assertLoop(props?: object | null): asserts this is NodePath<t.Loop>;
+    assertMemberExpression(props?: object | null): asserts this is NodePath<t.MemberExpression>;
+    assertMetaProperty(props?: object | null): asserts this is NodePath<t.MetaProperty>;
+    assertMethod(props?: object | null): asserts this is NodePath<t.Method>;
+    assertMixedTypeAnnotation(props?: object | null): asserts this is NodePath<t.MixedTypeAnnotation>;
+    assertModuleDeclaration(props?: object | null): asserts this is NodePath<t.ModuleDeclaration>;
+    assertModuleSpecifier(props?: object | null): asserts this is NodePath<t.ModuleSpecifier>;
+    assertNewExpression(props?: object | null): asserts this is NodePath<t.NewExpression>;
+    assertNoop(props?: object | null): asserts this is NodePath<t.Noop>;
+    assertNullLiteral(props?: object | null): asserts this is NodePath<t.NullLiteral>;
+    assertNullLiteralTypeAnnotation(props?: object | null): asserts this is NodePath<t.NullLiteralTypeAnnotation>;
+    assertNullableTypeAnnotation(props?: object | null): asserts this is NodePath<t.NullableTypeAnnotation>;
 
     /** @deprecated Use `assertNumericLiteral` */
-    assertNumberLiteral(props?: object | null): void;
-    assertNumberLiteralTypeAnnotation(props?: object | null): void;
-    assertNumberTypeAnnotation(props?: object | null): void;
-    assertNumericLiteral(props?: object | null): void;
-    assertObjectExpression(props?: object | null): void;
-    assertObjectMember(props?: object | null): void;
-    assertObjectMethod(props?: object | null): void;
-    assertObjectPattern(props?: object | null): void;
-    assertObjectProperty(props?: object | null): void;
-    assertObjectTypeAnnotation(props?: object | null): void;
-    assertObjectTypeCallProperty(props?: object | null): void;
-    assertObjectTypeIndexer(props?: object | null): void;
-    assertObjectTypeInternalSlot(props?: object | null): void;
-    assertObjectTypeProperty(props?: object | null): void;
-    assertObjectTypeSpreadProperty(props?: object | null): void;
-    assertOpaqueType(props?: object | null): void;
-    assertOptionalCallExpression(props?: object | null): void;
-    assertOptionalMemberExpression(props?: object | null): void;
-    assertParenthesizedExpression(props?: object | null): void;
-    assertPattern(props?: object | null): void;
-    assertPatternLike(props?: object | null): void;
-    assertPipelineBareFunction(props?: object | null): void;
-    assertPipelinePrimaryTopicReference(props?: object | null): void;
-    assertPipelineTopicExpression(props?: object | null): void;
-    assertPrivate(props?: object | null): void;
-    assertPrivateName(props?: object | null): void;
-    assertProgram(props?: object | null): void;
-    assertProperty(props?: object | null): void;
-    assertPureish(props?: object | null): void;
-    assertQualifiedTypeIdentifier(props?: object | null): void;
-    assertRegExpLiteral(props?: object | null): void;
+    assertNumberLiteral(props?: object | null): asserts this is NodePath<t.NumberLiteral>;
+    assertNumberLiteralTypeAnnotation(props?: object | null): asserts this is NodePath<t.NumberLiteralTypeAnnotation>;
+    assertNumberTypeAnnotation(props?: object | null): asserts this is NodePath<t.NumberTypeAnnotation>;
+    assertNumericLiteral(props?: object | null): asserts this is NodePath<t.NumericLiteral>;
+    assertObjectExpression(props?: object | null): asserts this is NodePath<t.ObjectExpression>;
+    assertObjectMember(props?: object | null): asserts this is NodePath<t.ObjectMember>;
+    assertObjectMethod(props?: object | null): asserts this is NodePath<t.ObjectMethod>;
+    assertObjectPattern(props?: object | null): asserts this is NodePath<t.ObjectPattern>;
+    assertObjectProperty(props?: object | null): asserts this is NodePath<t.ObjectProperty>;
+    assertObjectTypeAnnotation(props?: object | null): asserts this is NodePath<t.ObjectTypeAnnotation>;
+    assertObjectTypeCallProperty(props?: object | null): asserts this is NodePath<t.ObjectTypeCallProperty>;
+    assertObjectTypeIndexer(props?: object | null): asserts this is NodePath<t.ObjectTypeIndexer>;
+    assertObjectTypeInternalSlot(props?: object | null): asserts this is NodePath<t.ObjectTypeInternalSlot>;
+    assertObjectTypeProperty(props?: object | null): asserts this is NodePath<t.ObjectTypeProperty>;
+    assertObjectTypeSpreadProperty(props?: object | null): asserts this is NodePath<t.ObjectTypeSpreadProperty>;
+    assertOpaqueType(props?: object | null): asserts this is NodePath<t.OpaqueType>;
+    assertOptionalCallExpression(props?: object | null): asserts this is NodePath<t.OptionalCallExpression>;
+    assertOptionalMemberExpression(props?: object | null): asserts this is NodePath<t.OptionalMemberExpression>;
+    assertParenthesizedExpression(props?: object | null): asserts this is NodePath<t.ParenthesizedExpression>;
+    assertPattern(props?: object | null): asserts this is NodePath<t.Pattern>;
+    assertPatternLike(props?: object | null): asserts this is NodePath<t.PatternLike>;
+    assertPipelineBareFunction(props?: object | null): asserts this is NodePath<t.PipelineBareFunction>;
+    assertPipelinePrimaryTopicReference(props?: object | null): asserts this is NodePath<t.PipelinePrimaryTopicReference>;
+    assertPipelineTopicExpression(props?: object | null): asserts this is NodePath<t.PipelineTopicExpression>;
+    assertPrivate(props?: object | null): asserts this is NodePath<t.Private>;
+    assertPrivateName(props?: object | null): asserts this is NodePath<t.PrivateName>;
+    assertProgram(props?: object | null): asserts this is NodePath<t.Program>;
+    assertProperty(props?: object | null): asserts this is NodePath<t.Property>;
+    assertPureish(props?: object | null): asserts this is NodePath<t.Pureish>;
+    assertQualifiedTypeIdentifier(props?: object | null): asserts this is NodePath<t.QualifiedTypeIdentifier>;
+    assertRegExpLiteral(props?: object | null): asserts this is NodePath<t.RegExpLiteral>;
 
     /** @deprecated Use `assertRegExpLiteral` */
-    assertRegexLiteral(props?: object | null): void;
-    assertRestElement(props?: object | null): void;
+    assertRegexLiteral(props?: object | null): asserts this is NodePath<t.RegexLiteral>;
+    assertRestElement(props?: object | null): asserts this is NodePath<t.RestElement>;
 
     /** @deprecated Use `assertRestElement` */
-    assertRestProperty(props?: object | null): void;
-    assertReturnStatement(props?: object | null): void;
-    assertScopable(props?: object | null): void;
-    assertSequenceExpression(props?: object | null): void;
-    assertSpreadElement(props?: object | null): void;
+    assertRestProperty(props?: object | null): asserts this is NodePath<t.RestProperty>;
+    assertReturnStatement(props?: object | null): asserts this is NodePath<t.ReturnStatement>;
+    assertScopable(props?: object | null): asserts this is NodePath<t.Scopable>;
+    assertSequenceExpression(props?: object | null): asserts this is NodePath<t.SequenceExpression>;
+    assertSpreadElement(props?: object | null): asserts this is NodePath<t.SpreadElement>;
 
     /** @deprecated Use `assertSpreadElement` */
-    assertSpreadProperty(props?: object | null): void;
-    assertStatement(props?: object | null): void;
-    assertStringLiteral(props?: object | null): void;
-    assertStringLiteralTypeAnnotation(props?: object | null): void;
-    assertStringTypeAnnotation(props?: object | null): void;
-    assertSuper(props?: object | null): void;
-    assertSwitchCase(props?: object | null): void;
-    assertSwitchStatement(props?: object | null): void;
-    assertTSAnyKeyword(props?: object | null): void;
-    assertTSArrayType(props?: object | null): void;
-    assertTSAsExpression(props?: object | null): void;
-    assertTSBooleanKeyword(props?: object | null): void;
-    assertTSCallSignatureDeclaration(props?: object | null): void;
-    assertTSConditionalType(props?: object | null): void;
-    assertTSConstructSignatureDeclaration(props?: object | null): void;
-    assertTSConstructorType(props?: object | null): void;
-    assertTSDeclareFunction(props?: object | null): void;
-    assertTSDeclareMethod(props?: object | null): void;
-    assertTSEntityName(props?: object | null): void;
-    assertTSEnumDeclaration(props?: object | null): void;
-    assertTSEnumMember(props?: object | null): void;
-    assertTSExportAssignment(props?: object | null): void;
-    assertTSExpressionWithTypeArguments(props?: object | null): void;
-    assertTSExternalModuleReference(props?: object | null): void;
-    assertTSFunctionType(props?: object | null): void;
-    assertTSImportEqualsDeclaration(props?: object | null): void;
-    assertTSImportType(props?: object | null): void;
-    assertTSIndexSignature(props?: object | null): void;
-    assertTSIndexedAccessType(props?: object | null): void;
-    assertTSInferType(props?: object | null): void;
-    assertTSInterfaceBody(props?: object | null): void;
-    assertTSInterfaceDeclaration(props?: object | null): void;
-    assertTSIntersectionType(props?: object | null): void;
-    assertTSLiteralType(props?: object | null): void;
-    assertTSMappedType(props?: object | null): void;
-    assertTSMethodSignature(props?: object | null): void;
-    assertTSModuleBlock(props?: object | null): void;
-    assertTSModuleDeclaration(props?: object | null): void;
-    assertTSNamespaceExportDeclaration(props?: object | null): void;
-    assertTSNeverKeyword(props?: object | null): void;
-    assertTSNonNullExpression(props?: object | null): void;
-    assertTSNullKeyword(props?: object | null): void;
-    assertTSNumberKeyword(props?: object | null): void;
-    assertTSObjectKeyword(props?: object | null): void;
-    assertTSOptionalType(props?: object | null): void;
-    assertTSParameterProperty(props?: object | null): void;
-    assertTSParenthesizedType(props?: object | null): void;
-    assertTSPropertySignature(props?: object | null): void;
-    assertTSQualifiedName(props?: object | null): void;
-    assertTSRestType(props?: object | null): void;
-    assertTSStringKeyword(props?: object | null): void;
-    assertTSSymbolKeyword(props?: object | null): void;
-    assertTSThisType(props?: object | null): void;
-    assertTSTupleType(props?: object | null): void;
-    assertTSType(props?: object | null): void;
-    assertTSTypeAliasDeclaration(props?: object | null): void;
-    assertTSTypeAnnotation(props?: object | null): void;
-    assertTSTypeAssertion(props?: object | null): void;
-    assertTSTypeElement(props?: object | null): void;
-    assertTSTypeLiteral(props?: object | null): void;
-    assertTSTypeOperator(props?: object | null): void;
-    assertTSTypeParameter(props?: object | null): void;
-    assertTSTypeParameterDeclaration(props?: object | null): void;
-    assertTSTypeParameterInstantiation(props?: object | null): void;
-    assertTSTypePredicate(props?: object | null): void;
-    assertTSTypeQuery(props?: object | null): void;
-    assertTSTypeReference(props?: object | null): void;
-    assertTSUndefinedKeyword(props?: object | null): void;
-    assertTSUnionType(props?: object | null): void;
-    assertTSUnknownKeyword(props?: object | null): void;
-    assertTSVoidKeyword(props?: object | null): void;
-    assertTaggedTemplateExpression(props?: object | null): void;
-    assertTemplateElement(props?: object | null): void;
-    assertTemplateLiteral(props?: object | null): void;
-    assertTerminatorless(props?: object | null): void;
-    assertThisExpression(props?: object | null): void;
-    assertThisTypeAnnotation(props?: object | null): void;
-    assertThrowStatement(props?: object | null): void;
-    assertTryStatement(props?: object | null): void;
-    assertTupleTypeAnnotation(props?: object | null): void;
-    assertTypeAlias(props?: object | null): void;
-    assertTypeAnnotation(props?: object | null): void;
-    assertTypeCastExpression(props?: object | null): void;
-    assertTypeParameter(props?: object | null): void;
-    assertTypeParameterDeclaration(props?: object | null): void;
-    assertTypeParameterInstantiation(props?: object | null): void;
-    assertTypeofTypeAnnotation(props?: object | null): void;
-    assertUnaryExpression(props?: object | null): void;
-    assertUnaryLike(props?: object | null): void;
-    assertUnionTypeAnnotation(props?: object | null): void;
-    assertUpdateExpression(props?: object | null): void;
-    assertUserWhitespacable(props?: object | null): void;
-    assertVariableDeclaration(props?: object | null): void;
-    assertVariableDeclarator(props?: object | null): void;
-    assertVariance(props?: object | null): void;
-    assertVoidTypeAnnotation(props?: object | null): void;
-    assertWhile(props?: object | null): void;
-    assertWhileStatement(props?: object | null): void;
-    assertWithStatement(props?: object | null): void;
-    assertYieldExpression(props?: object | null): void;
-
+    assertSpreadProperty(props?: object | null): asserts this is NodePath<t.SpreadProperty>;
+    assertStatement(props?: object | null): asserts this is NodePath<t.Statement>;
+    assertStringLiteral(props?: object | null): asserts this is NodePath<t.StringLiteral>;
+    assertStringLiteralTypeAnnotation(props?: object | null): asserts this is NodePath<t.StringLiteralTypeAnnotation>;
+    assertStringTypeAnnotation(props?: object | null): asserts this is NodePath<t.StringTypeAnnotation>;
+    assertSuper(props?: object | null): asserts this is NodePath<t.Super>;
+    assertSwitchCase(props?: object | null): asserts this is NodePath<t.SwitchCase>;
+    assertSwitchStatement(props?: object | null): asserts this is NodePath<t.SwitchStatement>;
+    assertTSAnyKeyword(props?: object | null): asserts this is NodePath<t.TSAnyKeyword>;
+    assertTSArrayType(props?: object | null): asserts this is NodePath<t.TSArrayType>;
+    assertTSAsExpression(props?: object | null): asserts this is NodePath<t.TSAsExpression>;
+    assertTSBooleanKeyword(props?: object | null): asserts this is NodePath<t.TSBooleanKeyword>;
+    assertTSCallSignatureDeclaration(props?: object | null): asserts this is NodePath<t.TSCallSignatureDeclaration>;
+    assertTSConditionalType(props?: object | null): asserts this is NodePath<t.TSConditionalType>;
+    assertTSConstructSignatureDeclaration(props?: object | null): asserts this is NodePath<t.TSConstructSignatureDeclaration>;
+    assertTSConstructorType(props?: object | null): asserts this is NodePath<t.TSConstructorType>;
+    assertTSDeclareFunction(props?: object | null): asserts this is NodePath<t.TSDeclareFunction>;
+    assertTSDeclareMethod(props?: object | null): asserts this is NodePath<t.TSDeclareMethod>;
+    assertTSEntityName(props?: object | null): asserts this is NodePath<t.TSEntityName>;
+    assertTSEnumDeclaration(props?: object | null): asserts this is NodePath<t.TSEnumDeclaration>;
+    assertTSEnumMember(props?: object | null): asserts this is NodePath<t.TSEnumMember>;
+    assertTSExportAssignment(props?: object | null): asserts this is NodePath<t.TSExportAssignment>;
+    assertTSExpressionWithTypeArguments(props?: object | null): asserts this is NodePath<t.TSExpressionWithTypeArguments>;
+    assertTSExternalModuleReference(props?: object | null): asserts this is NodePath<t.TSExternalModuleReference>;
+    assertTSFunctionType(props?: object | null): asserts this is NodePath<t.TSFunctionType>;
+    assertTSImportEqualsDeclaration(props?: object | null): asserts this is NodePath<t.TSImportEqualsDeclaration>;
+    assertTSImportType(props?: object | null): asserts this is NodePath<t.TSImportType>;
+    assertTSIndexSignature(props?: object | null): asserts this is NodePath<t.TSIndexSignature>;
+    assertTSIndexedAccessType(props?: object | null): asserts this is NodePath<t.TSIndexedAccessType>;
+    assertTSInferType(props?: object | null): asserts this is NodePath<t.TSInferType>;
+    assertTSInterfaceBody(props?: object | null): asserts this is NodePath<t.TSInterfaceBody>;
+    assertTSInterfaceDeclaration(props?: object | null): asserts this is NodePath<t.TSInterfaceDeclaration>;
+    assertTSIntersectionType(props?: object | null): asserts this is NodePath<t.TSIntersectionType>;
+    assertTSLiteralType(props?: object | null): asserts this is NodePath<t.TSLiteralType>;
+    assertTSMappedType(props?: object | null): asserts this is NodePath<t.TSMappedType>;
+    assertTSMethodSignature(props?: object | null): asserts this is NodePath<t.TSMethodSignature>;
+    assertTSModuleBlock(props?: object | null): asserts this is NodePath<t.TSModuleBlock>;
+    assertTSModuleDeclaration(props?: object | null): asserts this is NodePath<t.TSModuleDeclaration>;
+    assertTSNamespaceExportDeclaration(props?: object | null): asserts this is NodePath<t.TSNamespaceExportDeclaration>;
+    assertTSNeverKeyword(props?: object | null): asserts this is NodePath<t.TSNeverKeyword>;
+    assertTSNonNullExpression(props?: object | null): asserts this is NodePath<t.TSNonNullExpression>;
+    assertTSNullKeyword(props?: object | null): asserts this is NodePath<t.TSNullKeyword>;
+    assertTSNumberKeyword(props?: object | null): asserts this is NodePath<t.TSNumberKeyword>;
+    assertTSObjectKeyword(props?: object | null): asserts this is NodePath<t.TSObjectKeyword>;
+    assertTSOptionalType(props?: object | null): asserts this is NodePath<t.TSOptionalType>;
+    assertTSParameterProperty(props?: object | null): asserts this is NodePath<t.TSParameterProperty>;
+    assertTSParenthesizedType(props?: object | null): asserts this is NodePath<t.TSParenthesizedType>;
+    assertTSPropertySignature(props?: object | null): asserts this is NodePath<t.TSPropertySignature>;
+    assertTSQualifiedName(props?: object | null): asserts this is NodePath<t.TSQualifiedName>;
+    assertTSRestType(props?: object | null): asserts this is NodePath<t.TSRestType>;
+    assertTSStringKeyword(props?: object | null): asserts this is NodePath<t.TSStringKeyword>;
+    assertTSSymbolKeyword(props?: object | null): asserts this is NodePath<t.TSSymbolKeyword>;
+    assertTSThisType(props?: object | null): asserts this is NodePath<t.TSThisType>;
+    assertTSTupleType(props?: object | null): asserts this is NodePath<t.TSTupleType>;
+    assertTSType(props?: object | null): asserts this is NodePath<t.TSType>;
+    assertTSTypeAliasDeclaration(props?: object | null): asserts this is NodePath<t.TSTypeAliasDeclaration>;
+    assertTSTypeAnnotation(props?: object | null): asserts this is NodePath<t.TSTypeAnnotation>;
+    assertTSTypeAssertion(props?: object | null): asserts this is NodePath<t.TSTypeAssertion>;
+    assertTSTypeElement(props?: object | null): asserts this is NodePath<t.TSTypeElement>;
+    assertTSTypeLiteral(props?: object | null): asserts this is NodePath<t.TSTypeLiteral>;
+    assertTSTypeOperator(props?: object | null): asserts this is NodePath<t.TSTypeOperator>;
+    assertTSTypeParameter(props?: object | null): asserts this is NodePath<t.TSTypeParameter>;
+    assertTSTypeParameterDeclaration(props?: object | null): asserts this is NodePath<t.TSTypeParameterDeclaration>;
+    assertTSTypeParameterInstantiation(props?: object | null): asserts this is NodePath<t.TSTypeParameterInstantiation>;
+    assertTSTypePredicate(props?: object | null): asserts this is NodePath<t.TSTypePredicate>;
+    assertTSTypeQuery(props?: object | null): asserts this is NodePath<t.TSTypeQuery>;
+    assertTSTypeReference(props?: object | null): asserts this is NodePath<t.TSTypeReference>;
+    assertTSUndefinedKeyword(props?: object | null): asserts this is NodePath<t.TSUndefinedKeyword>;
+    assertTSUnionType(props?: object | null): asserts this is NodePath<t.TSUnionType>;
+    assertTSUnknownKeyword(props?: object | null): asserts this is NodePath<t.TSUnknownKeyword>;
+    assertTSVoidKeyword(props?: object | null): asserts this is NodePath<t.TSVoidKeyword>;
+    assertTaggedTemplateExpression(props?: object | null): asserts this is NodePath<t.TaggedTemplateExpression>;
+    assertTemplateElement(props?: object | null): asserts this is NodePath<t.TemplateElement>;
+    assertTemplateLiteral(props?: object | null): asserts this is NodePath<t.TemplateLiteral>;
+    assertTerminatorless(props?: object | null): asserts this is NodePath<t.Terminatorless>;
+    assertThisExpression(props?: object | null): asserts this is NodePath<t.ThisExpression>;
+    assertThisTypeAnnotation(props?: object | null): asserts this is NodePath<t.ThisTypeAnnotation>;
+    assertThrowStatement(props?: object | null): asserts this is NodePath<t.ThrowStatement>;
+    assertTryStatement(props?: object | null): asserts this is NodePath<t.TryStatement>;
+    assertTupleTypeAnnotation(props?: object | null): asserts this is NodePath<t.TupleTypeAnnotation>;
+    assertTypeAlias(props?: object | null): asserts this is NodePath<t.TypeAlias>;
+    assertTypeAnnotation(props?: object | null): asserts this is NodePath<t.TypeAnnotation>;
+    assertTypeCastExpression(props?: object | null): asserts this is NodePath<t.TypeCastExpression>;
+    assertTypeParameter(props?: object | null): asserts this is NodePath<t.TypeParameter>;
+    assertTypeParameterDeclaration(props?: object | null): asserts this is NodePath<t.TypeParameterDeclaration>;
+    assertTypeParameterInstantiation(props?: object | null): asserts this is NodePath<t.TypeParameterInstantiation>;
+    assertTypeofTypeAnnotation(props?: object | null): asserts this is NodePath<t.TypeofTypeAnnotation>;
+    assertUnaryExpression(props?: object | null): asserts this is NodePath<t.UnaryExpression>;
+    assertUnaryLike(props?: object | null): asserts this is NodePath<t.UnaryLike>;
+    assertUnionTypeAnnotation(props?: object | null): asserts this is NodePath<t.UnionTypeAnnotation>;
+    assertUpdateExpression(props?: object | null): asserts this is NodePath<t.UpdateExpression>;
+    assertUserWhitespacable(props?: object | null): asserts this is NodePath<t.UserWhitespacable>;
+    assertVariableDeclaration(props?: object | null): asserts this is NodePath<t.VariableDeclaration>;
+    assertVariableDeclarator(props?: object | null): asserts this is NodePath<t.VariableDeclarator>;
+    assertVariance(props?: object | null): asserts this is NodePath<t.Variance>;
+    assertVoidTypeAnnotation(props?: object | null): asserts this is NodePath<t.VoidTypeAnnotation>;
+    assertWhile(props?: object | null): asserts this is NodePath<t.While>;
+    assertWhileStatement(props?: object | null): asserts this is NodePath<t.WhileStatement>;
+    assertWithStatement(props?: object | null): asserts this is NodePath<t.WithStatement>;
+    assertYieldExpression(props?: object | null): asserts this is NodePath<t.YieldExpression>;
+
+    // Must remove asserts from these
     assertBindingIdentifier(props?: object | null): void;
     assertBlockScoped(props?: object | null): void;
     assertGenerated(props?: object | null): void;